import React from 'react';
import { useState, useEffect } from "react";
import axios from "axios";


export default function Uebersicht({ data = [] }) {

    const [searchData, setSearchData] = useState("");

    console.log("hier Uebersicht data prop", data)

    //function for displaying the current status
    function handleStatus(status) {
        if (status === "w" || status === "W") {
            return <span className="px-2 inline-flex text-xs leading-5 font-semibold rounded-full bg-green-100 text-green-800">wiedereingeschleust</span>
        } else if (status === "e" || status === "E") {
            return <span className="px-2 inline-flex text-xs leading-5 font-semibold rounded-full bg-green-100 text-green-800">eingeschleust</span>

        }
        else if (status === "a") {
            return <span className="px-2 inline-flex text-xs leading-5 font-semibold rounded-full bg-red-100 text-red-800">ausgeschleust</span>
        }
    }

    // create function which returns JSX for the table data
    function handleDataToTable(dataForTable) {
        return dataForTable.map((item) => (
            <tr key={item.id} className="odd:bg-white odd:dark:bg-gray-900 even:bg-gray-50 even:dark:bg-gray-800 border-b dark:border-gray-700">
                <td className="px-6 py-4">{item.id}</td>
                <td className=" py-4">{handleStatus(item.Status)}</td>
                <td className="px-6 py-4 space-x-2">
                    {item.Status === "a" || item.Status === "A" ? (
                        <button className=" w-full bg-transparent  hover:bg-blue-500 text-blue-700 font-semibold hover:text-white py-1  text-xs border border-blue-500 hover:border-transparent rounded">
                            WIEDER
                        </button>
                    ) : <button className=" w-full bg-transparent  hover:bg-blue-500 text-blue-700 font-semibold hover:text-white py-1  text-xs border border-blue-500 hover:border-transparent rounded">
                        AUS
                    </button>}


                </td>
                <td className="px-6 py-4">{item.PatientenNummer}</td>
                <td className="px-6 py-4">{item.Alter}</td>
                <td className="px-6 py-4">{item.Diagnose}</td>



            </tr>
        ))
    }







    function handleSearch(PatientenNummer) {

        if (PatientenNummer) {
            const filteredData = data.filter((item) => item.PatientenNummer === PatientenNummer);
            filteredData ? setSearchData(filteredData) : setSearchData([]) && alert("PatientIn mit dieser Patientennummer nicht gefunden")

            return (
                // return the whole table with the data of the founded PatientIn
                <div className="relative overflow-x-auto shadow-md sm:rounded-lg">

                    <table className="w-full text-sm text-left rtl:text-right text-gray-500 dark:text-gray-400">
                        <thead className="text-xs text-gray-700 uppercase bg-gray-100 dark:bg-gray-700 dark:text-gray-400 rounded-md shadow-md">
                            <tr>
                                <th scope="col" className="px-6 py-3">id</th>
                                <th scope="col" className="px-6 py-3">Status</th>
                                <th scope="col" className="px-6 py-3">Aktion</th>
                                <th scope="col" className="px-6 py-3">Patientennummer</th>
                                <th scope="col" className="px-6 py-3">Alter</th>
                                <th scope="col" className="px-6 py-3">Diagnose</th>


                            </tr>
                        </thead>
                        <tbody>
                            {handleDataToTable(searchData)}
                        </tbody>
                    </table>
                </div>


            )



        }

    }




    return (
        <>
            {/* the UI of the Search Bar */}


            <form class="max-w-md mx-auto mt-12 mb-12">
                <label for="default-search" class="mb-2 text-sm font-medium text-gray-900 sr-only dark:text-white">Search</label>
                <div class="relative">
                    <div class="absolute inset-y-0 start-0 flex items-center ps-3 pointer-events-none">
                        <svg class="w-4 h-4 text-gray-500 dark:text-gray-400" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 20 20">
                            <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="m19 19-4-4m0-7A7 7 0 1 1 1 8a7 7 0 0 1 14 0Z" />
                        </svg>
                    </div>
                    <input type="search" id="default-search" class="block w-full p-4 ps-10 text-sm text-gray-900 border border-gray-300 rounded-lg bg-gray-50 focus:ring-blue-500 focus:border-blue-500 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500" placeholder=" ID des/der PatientIn eingeben..." required />
                    <button type="submit" class="text-white absolute end-2.5 bottom-2.5 bg-blue-700 hover:bg-blue-800 focus:ring-4 focus:outline-none focus:ring-blue-300 font-medium rounded-lg text-sm px-4 py-2 dark:bg-blue-600 dark:hover:bg-blue-700 dark:focus:ring-blue-800" onClick={handleSearch }>Suchen</button>
                </div>
            </form>





            <div className="relative overflow-x-auto shadow-md sm:rounded-lg">

                <table className="w-full text-sm text-left rtl:text-right text-gray-500 dark:text-gray-400">
                    <thead className="text-xs text-gray-700 uppercase bg-gray-100 dark:bg-gray-700 dark:text-gray-400 rounded-md shadow-md">
                        <tr>
                            <th scope="col" className="px-6 py-3">id</th>
                            <th scope="col" className="px-6 py-3">Status</th>
                            <th scope="col" className="px-6 py-3">Aktion</th>
                            <th scope="col" className="px-6 py-3">Patientennummer</th>
                            <th scope="col" className="px-6 py-3">Alter</th>
                            <th scope="col" className="px-6 py-3">Diagnose</th>


                        </tr>
                    </thead>
                    <tbody>
                        {handleDataToTable(data)}
                    </tbody>
                </table>
            </div>


        </>
    );
}